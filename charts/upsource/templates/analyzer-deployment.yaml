apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app-service: analyzer
  name: analyzer
spec:
  replicas: {{ .Values.frontend.replicas }}
  selector:
    matchLabels:
      app-service: analyzer
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      labels:
        app-network/upsource-net-name: 'true'
        app-service: analyzer
    spec:
      containers:
        - name: analyzer
          image: {{ .Values.global.image.prefix }}{{ .Values.analyzer.image.repository }}:{{ .Values.global.image.UPSOURCE_VERSION }}
          imagePullPolicy: {{ .Values.analyzer.image.pullPolicy | quote }}
          # command: ["tail", "-f", "/etc/hosts"]
          args:
            - --J{{ .Values.analyzer.args.UPSOURCE_ANALYZER_XMX }}
          env:
          {{- range $index, $topping := .Values.global.env }}
            {{- if $topping }}
            - name: {{ $index }}
              value: {{ $topping | quote }}
            {{- end }}
          {{- end }}
          ports:
            - containerPort: 10061
            - containerPort: 8886
          resources: {}
          volumeMounts:
            - name: analyzer-claim0
              mountPath: /opt/upsource-analyzer/logs
{{ include "configmap.volumeMounts.log4j.xml" . | indent 12 }}
      restartPolicy: Always
      securityContext:
        runAsUser: 13001
        fsGroup: 13001
      volumes:
        - name: analyzer-claim0
          persistentVolumeClaim:
            claimName: analyzer-claim0
{{ include "configmap.volume.log4j.xml" . | indent 8 }}
