apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app-service: hub
  name: hub
spec:
  replicas: 1
  selector:
    matchLabels:
      app-service: hub
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      labels:
        app-network/upsource-net-name: "true"
        app-service: hub
    spec:
      initContainers:
        - name: init-configure
          image: {{ .Values.global.image.prefix }}{{ .Values.hub.image.repository }}:{{ .Values.hub.image.tag }}
          command:
            # - tail
            # - -f
            # - /etc/hosts
            - /bin/bash
            - /run.sh
            - configure
            - -J-Ddisable.configuration.wizard.on.clean.install=true
            - --base-url=http://localhost:{{ .Values.hub.service.port }}
          volumeMounts:
            - name: hub-claim0
              mountPath: /opt/hub/conf
              subPath: conf
        - name: init-configure-next-start
          image: {{ .Values.global.image.prefix }}{{ .Values.hub.image.repository }}:{{ .Values.hub.image.tag }}
          command:
            - /bin/bash
            - /run.sh
            - configure-next-start
            - --J-Djetbrains.hub.admin.restore=true
            - --J-Djetbrains.hub.admin.password=12345678
          volumeMounts:
            - name: hub-claim0
              mountPath: /opt/hub/conf
              subPath: conf
      containers:
        - env:
        {{- if .Values.hub.upsourceSubnet }}
            - name: UPSOURCE_SUBNET
              value: {{ .Values.hub.upsourceSubnet }}
        {{- end }}
        {{- if .Values.hub.constraint }}
            - name: constraint
              value: node=={{ .Values.hub.constraint }}
        {{- end }}
          image: {{ .Values.global.image.prefix }}{{ .Values.hub.image.repository }}:{{ .Values.hub.image.tag }}
          imagePullPolicy: {{ .Values.hub.image.pullPolicy | quote }}
          name: hub
          ports:
            - containerPort: {{ .Values.hub.service.port }}
          resources: {}
          volumeMounts:
            - name: hub-claim0
              mountPath: /opt/hub/data
              subPath: data
            - name: hub-claim0
              mountPath: /opt/hub/conf
              subPath: conf
            - name: hub-claim0
              mountPath: /opt/hub/logs
              subPath: logs
            - name: hub-claim0
              mountPath: /opt/hub/backups
              subPath: backups
      restartPolicy: Always
      securityContext:
        runAsUser: 13001
        fsGroup: 13001
      volumes:
        - name: hub-claim0
          persistentVolumeClaim:
            claimName: hub-claim0
status: {}
